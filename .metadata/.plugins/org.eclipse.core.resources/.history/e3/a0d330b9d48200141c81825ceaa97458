package zadanie4;

import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;

public class Neighbor implements Runnable {

	private Neighbor neighbor;
	private String name;
	private static ReentrantLock lock = new ReentrantLock();
	private static Condition reqLock;
	private static Condition respLock;
	
	Neighbor(String name) {
		this.name = name;
		reqLock = lock.newCondition();
		respLock = lock.newCondition();
	}

	@Override
	public void run() {
		for (int i = 0; i < 2; i++) {
			hiReq();
		}
	}

	public void setNeighbor(Neighbor neighbor) {
		this.neighbor = neighbor;
	}

	public void hiReq() {
		try {
			reqLock.await();
			System.out.println(name + ": Mowie dzien dobry");
			neighbor.hiResp();
		} catch (InterruptedException e) {} finally {
			reqLock.signal();
		}
	}

	public void hiResp() {
		try{
			respLock.await();
			System.out.println(name + ": Odpowiadam dzien dobry");
		} catch (InterruptedException e){}
		finally {
			respLock.signal();
		}
	}


}
