import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

public class Warehouse {
	private Integer data = 0;
	private static ReentrantLock lock = new ReentrantLock();
	
	public Integer get() {
		lock.lock();
		try{
			while(data<=0){
				try {
					synchronized(lock){
						lock.wait();
					}
				} catch (InterruptedException e) {}
			}
			data--;
			lock.notifyAll();
			return data;
		} finally {
			lock.unlock();
		}
	}

	public Integer put() {
		lock.lock();
		try{
			while(data>=5){
				try {
					lock.wait();
				} catch (InterruptedException e) {}
			}
			data++;
			lock.notifyAll();
			return data;
		} finally {
			lock.unlock();
		}
	}
}
